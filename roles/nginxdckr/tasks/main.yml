---
- name: Install aptitude
  ansible.builtin.apt:
    name: aptitude
    state: present
    update_cache: true

- name: Install required system packages
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: present
    update_cache: true

- name: Add Docker GPG apt Key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  ansible.builtin.apt:
    name: docker-ce
    state: latest
    update_cache: true

- name: Install Docker Module for Python
  ansible.builtin.pip:
    name: docker

- name: Create a network
  community.docker.docker_network:
    name: "{{ docker_network }}"

- name: Pull default Docker image
  community.docker.docker_image:
    name: "{{ default_container_image }}"
    source: pull

- name: Apply Nginx template for index.html
  ansible.builtin.template:
    src: "index.html.j2"
    dest: "/tmp/nginx/index_backend_{{ item }}.html"
    mode: '0644'
  with_sequence: count=3

- name: Start 3 load-balanced containers
  community.docker.docker_container:
    auto_remove: true
    container_default_behavior: compatibility
    name: "backend_{{ item }}"
    recreate: true
    image: nginx
    networks:
      - name: back_net
    volumes:
      - "/tmp/nginx/index_backend_{{ item }}.html:/usr/share/nginx/html/index.html:ro"
  with_sequence: count=3

- name: Apply Nginx template for loadbalancer
  ansible.builtin.template:
    src: "nginx.conf.j2"
    dest: "/tmp/nginx/nginx.conf"
    mode: '0644'

- name: Start load-balancer container
  community.docker.docker_container:
    auto_remove: true
    container_default_behavior: compatibility
    name: "nginx"
    recreate: true
    image: nginx
    ports:
      - "80:80"
    networks:
      - name: back_net
    volumes:
      - "/tmp/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
